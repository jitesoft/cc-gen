include:
  - file: /Auto/go.yml
    project: jitesoft/gitlab-ci-lib

stages:
  - build
  - containerize

build:
  stage: build
  tags:
    - protected
    - jitesoft
  rules:
    - if: '$CI_COMMIT_TAG && $CI_COMMIT_BRANCH == "master"'
      when: always
    - when: never
  image: registry.gitlab.com/jitesoft/dockerfiles/go:1.15
  parallel:
    matrix:
      - { GOARCH: "amd64", GOOS: "linux",   FILENAME: "cc-gen" }
      - { GOARCH: "arm64", GOOS: "linux",   FILENAME: "cc-gen" }
      - { GOARCH: "arm",   GOOS: "linux",   FILENAME: "cc-gen" }
      - { GOARCH: "amd64", GOOS: "darwin",  FILENAME: "cc-gen" }
      - { GOARCH: "amd64", GOOS: "windows", FILENAME: "cc-gen.exe" }
  before_script:
    - apk add --no-cache tar
  script:
    - go mod download
    - go build -ldflags "-X github.com/jitesoft/cc-gen/cmd.Version=${CI_COMMIT_TAG}"
    - mkdir bin
  after_script:
    - tar tar -zc "${FILENAME}" -f bin/cc-gen-${GOARCH}-${GOOS}.tar.gz
  artifacts:
    when: on_success
    paths:
      - bin
    expire_in: 1 day

containerize:
  rules:
    - if: '$CI_COMMIT_TAG && $CI_COMMIT_BRANCH == "master"'
      when: always
    - when: never
  needs:
    - job: build
      artifacts: true
  image: registry.gitlab.com/jitesoft/dockerfiles/misc:latest
  stage: containerize
  script:
    - docker buildx build --platform linux/amd64,linux/arm64,linux/arm/v7 --progress plain --build-arg VERSION=${CI_COMMIT_TAG} --push -t ${CI_REGISTRY_IMAGE}:${$CI_COMMIT_TAG} -t ${CI_REGISTRY_IMAGE}:latest .
